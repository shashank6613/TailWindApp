# Ensure the main Prometheus server is exposed via ClusterIP
prometheus:
  service:
    type: ClusterIP
  ingress:
    enabled: false
  prometheusSpec:
    externalUrl: http://__ALB_DNS__/prometheus
    routePrefix: /prometheus

# Ensure Alertmanager is exposed via ClusterIP
alertmanager:
  service:
    type: ClusterIP
  ingress:
    enabled: false
  alertmanagerSpec:
    externalUrl: http://__ALB_DNS__/alertmanager
    routePrefix: /alertmanager

# Ensure Grafana is exposed via ClusterIP
grafana:
  grafana.ini:
    server:
      root_url: "%(protocol)s://%(domain)s/grafana"
      serve_from_sub_path: true
  service:
    type: ClusterIP
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
      - host: __ALB_DNS__
        paths:
          - path: /grafana
            pathType: Prefix
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"

# ServiceMonitors are fine as they are, they define how Prometheus scrapes
serviceMonitors:
  - name: backend-metrics
    namespace: default # Ensure this matches the namespace of your backend app
    selector:
      matchLabels:
        app: backend
    endpoints:
      - port: http # This should match the name of the port in your backend-service
        path: /metrics

        interval: 15s



